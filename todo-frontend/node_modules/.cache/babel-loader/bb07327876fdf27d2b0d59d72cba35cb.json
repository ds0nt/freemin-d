{"ast":null,"code":"var _jsxFileName = \"/Users/jaquelinecoelho/Desktop/freemind/todo-frontend/src/routes-nav/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\"; // \"Higher-Order Component\" for private routes.\n//  \n//  This component will check if there is a valid current user and only continues to the\n//  route if so. If no user is present, redirects to login form.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute(_ref) {\n  _s();\n\n  let {\n    exact,\n    path,\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.debug(\"PrivateRoute\", \"exact=\", exact, \"path=\", path, \"currentUser=\", currentUser);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: exact,\n    path: path,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/jaquelinecoelho/Desktop/freemind/todo-frontend/src/routes-nav/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","UserContext","PrivateRoute","exact","path","children","currentUser","console","debug"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;AACA;AACA;AACA;;;;AAEA,SAASC,YAAT,OAAiD;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA2B;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,UAAU,CAACG,WAAD,CAAlC;AAEAM,EAAAA,OAAO,CAACC,KAAR,CACI,cADJ,EAEI,QAFJ,EAEcL,KAFd,EAGI,OAHJ,EAGaC,IAHb,EAII,cAJJ,EAIoBE,WAJpB;;AAOA,MAAI,CAACA,WAAL,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAqB,IAAA,IAAI,EAAEC,IAA3B;AAAA,cACGC;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;GAnBQH,Y;;KAAAA,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n// \"Higher-Order Component\" for private routes.\n//  \n//  This component will check if there is a valid current user and only continues to the\n//  route if so. If no user is present, redirects to login form.\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}