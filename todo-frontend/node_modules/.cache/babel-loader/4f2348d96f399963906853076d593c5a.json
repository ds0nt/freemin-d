{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key) {\n  _s();\n\n  let firstValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const initialValue = localStorage.getItem(key) || firstValue;\n  const [item, setItem] = useState(initialValue);\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n  return [item, setItem];\n}\n\n_s(useLocalStorage, \"Ffy6E8fMITg3LBvoOT7j3kGXQqo=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/jaquelinecoelho/Desktop/freemind/todo-frontend/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","item","setItem","setKeyInLocalStorage","console","debug","removeItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAAiD;AAAA;;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;AAC/C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,KAA6BC,UAAlD;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,YAAD,CAAhC;AAEAJ,EAAAA,SAAS,CAAC,SAASS,oBAAT,GAAgC;AACxCC,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiD,OAAjD,EAA0DJ,IAA1D;;AAEA,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBF,MAAAA,YAAY,CAACO,UAAb,CAAwBV,GAAxB;AACD,KAFD,MAEO;AACLG,MAAAA,YAAY,CAACG,OAAb,CAAqBN,GAArB,EAA0BK,IAA1B;AACD;AACF,GARQ,EAQN,CAACL,GAAD,EAAMK,IAAN,CARM,CAAT;AAUA,SAAO,CAACA,IAAD,EAAOC,OAAP,CAAP;AACD;;GAhBQP,e;;AAkBT,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}